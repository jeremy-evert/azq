#!/usr/bin/env python3
# uaskd â€” "because you asked" interactive command runner

import sys, subprocess

def run_command(cmd: str):
    """Run a shell command and stream its output."""
    try:
        subprocess.run(cmd, shell=True, check=True)
    except subprocess.CalledProcessError as e:
        print(f"[uaskd] Command failed: {e}")

def interactive_prompt(commands):
    for cmd in commands:
        print(f"\nCommand suggested: {cmd}")
        while True:
            choice = input(
                "Run it? [y=Yes, s=Skip (default/Enter), e=Edit, p=Pause, a=Abort]: "
            ).strip().lower()

            if choice == "y":
                print(f"[uaskd] Running: {cmd}")
                run_command(cmd)
                break
            elif choice == "s" or choice == "":
                print("[uaskd] Skipped.")
                break
            elif choice == "e":
                edited = input("Edit command: ")
                if edited.strip():
                    print(f"[uaskd] Running edited: {edited}")
                    run_command(edited)
                break
            elif choice == "p":
                print("[uaskd] Paused. You can resume later.")
                return
            elif choice == "a":
                print("[uaskd] Aborted by user.")
                sys.exit(0)
            else:
                print("Invalid choice, please use y/s/e/p/a or Enter for skip.")

def main():
    # For now, just read commands from stdin (pipeline from azq ask)
    text = sys.stdin.read().splitlines()
    # Look for lines that are shell commands
    commands = [line for line in text if line.startswith("!") or line.startswith("```bash") or line.startswith("./") or line.startswith("git ")]
    # Strip any prefixes like "!":
    commands = [c.lstrip("!").replace("```bash", "").strip() for c in commands]
    if not commands:
        print("[uaskd] No commands found in input.")
        return
    interactive_prompt(commands)

if __name__ == "__main__":
    main()

